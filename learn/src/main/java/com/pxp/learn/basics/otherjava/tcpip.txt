1. Socket通信原理
https://www.cnblogs.com/wangcq/p/3520400.html


TCP/IP（Transmission Control Protocol/Internet Protocol）即传输控制协议/网间协议，是一个工业标准的协议集，它是为广域网（WANs）设计的。
UDP（User Data Protocol，用户数据报协议）是与TCP相对应的协议。它是属于TCP/IP协议族中的一种。
TCP/IP协议族包括运输层、网络层、链路层


HTTP全称为Hyper Text Transfer Protocol，被译为超文本传输协议，是互联网上应用最为广泛的—种网络协议。


HTTP和TCP/IP协议的区别和联系？
    1.HTTP 协议是应用层协议，主要解决如何包装数据，是基于TCP连接的。TCP/IP 协议是传输层协议，主要解决数据在网路中如何传输的问题。

    2.HTTP协议是获取地址，传递数据的一种基于请求与响应模式的应用层的协议。而TCP是服务器和客户端可以互相发送消息的交互模式。服务器主动可以推送消息给客户端。

    3.Http就是在每次请求完成后就把TCP连接关了，所以是短连接。TCP是长连接。

    TCP是HTTP进行端对端的数据交互时的数据请求方式；HTTP是TCP进行虚拟线路连接时获得服务端位置--端口号的来源。
    HTTP是在TCP之上，它负责在发送端“生成针对目标Web服务器的HTTP请求报文”和在接收端“对Web服务器请求的内容进行处理”。


HTTP 是基于 TCP 还是 UDP 的？
    HTTP是基于TCP协议的。
    TCP (Transmission Control Protocol) 是一种面向连接的、可靠的、基于字节流的传输层协议,它提供了数据传输的可靠性和完整性，确保数据能够按照正确的顺序到达目的地。TCP协议通过三次握手建立连接，通过四次挥手断开连接，保证了数据传输的可靠性和完整性。
    HTTP (Hypertext Transfer Protocol) 是一种应用层协议，用于在Web浏览器和Web服务器之间传输数据。HTTP协议是基于TCP协议的，它使用TCP协议提供的可靠性和完整性来保证数据传输的正确性。
    HTTP协议使用TCP协议的三次握手建立连接，通过发送HTTP请求和接收HTTP响应来传输数据。HTTP请求和响应都是基于TCP协议的数据流，它们被分成多个TCP数据包进行传输。TCP协议保证了这些数据包按照正确的顺序到达目的地，并目在传输过程中不会丢失或损坏.
    HTTP协议使用TCP协议的流量控制和拥塞控制机制来控制数据传输的速度。TCP协议通过滑动窗机制来控制发送方和接收方之间的数据流量，确保发送方不会发送过多的数据导致接收方无法处理。TCP协议还使用拥塞控制机制来避免网络拥塞，确保数据能够在网络中稳定地传输.
    总之，HTTP协议是基于TCP协议的，它使用TCP协议提供的可靠性、完整性、流量控制和拥塞控制机制来保证数据传输的正确性和稳定性。虽然UDP协议也可以用于数据传输，但是它不提供可靠性和完整性保证，不适合用于HTTP协议这种需要保证数据传输正确性的应用场景。


一、什么是七层协议
    https://blog.csdn.net/u012174809/article/details/123913115
    互联网的本质是一系列的网络协议，这个协议就叫做OSI协议。按照功能不同分工不同，人为的分为七层。
    实际上这七层是并不存在的，也就是说没有这些概念，而我们今天提到的七层概念，只是人为的划分而已。
    目的只是为了让大家更好地理解这些都是用来做什么的。OSI就是一个开放的通信系统互联参考模型，也是一个定义的很好的协议规范。
    OSI模型有7层结构，每层都可以有几个子层。OSI的7层从下到上分别是7-应用层、6-表示层、5-会话层、4-传输层、3-网络层、2-数据链路层、1-物理层。

    1.物理层（网卡）
        是模型的最低层。该层是网络通信的数据传输介质，由连接不同结点的电缆与设备共同构成。功能是：利用传输介质为数据链路层提供物理连接，用于计算机之间的数据传输，传输bit流。负责0、1 比特流（0/1序列）与电压的高低、逛的闪灭之间的转换。
        在这一层，数据的单位称为比特（bit）。

    2.数据链路层（交换机）
        负责物理层面上的互联的、节点间的通信传输（例如一个以太网项链的2个节点之间的通信），传输以“帧”为单位的数据包，该层的作用包括：物理地址寻址、数据的成帧、流量控制、数据的检错、重发等。对bit数据格式化，校验。目的是保障数据传输可靠性。采用差错控制与流量控制方法，使有差错的物理线路变成无差错的数据链路。
        在这一层，数据的单位称为帧。
        当我们专门研究数据链路层的问题时， 在许多情况下我们可以只关心在协议栈中水平方向的各数据链路层。

        所谓链路就是从一个结点到相邻结点的一段物理线路（有线或无线），而中间没有任何其他的交换接点。在进行数据通信时，两台计算机之间的通信路径往往要经过许多段这样的链路。可见链路是路径的组成部分。
        数据链路是另一个概念、这是因为当需要在一条线路上传输数据时，除了必须有一条物理线路外，还必须有一些必要的协议来控制这些数据的传输。若把实现这些协议的硬件和软件加到链路上，就构成了数据链路。现在最常用的方法是使用网络适配器（既有硬件，也有软件）来实现这些协议。一般设配器都拥有物理层和数据链路层。

    3.网络层（路由选择，点到点）
        为数据在节点之间传输创建逻辑链路，IP寻址，通过IP连接网络上的计算机。将数据传输到目标地址；目标地址可以使多个网络通过路由器连接而成的某一个地址，主要负责寻找地址和路由选择。通过路由实现不同局域网间的通信。通过路由选择算法为分组通过通信子网选择最适当的路径，以及实现拥塞控制、网络互连等功能。
        在这一层，数据的单位称为数据包（packet）。

    4.传输层（端到端）
        只在通信双方的节点上（比如计算机终端）进行处理，而无需在路由器上处理，主要功能是：建立了主机端到端服务，处理数据包错误、数据包次序，以及其他一些关键传输问题。传输层向高层屏蔽了下层数据通信的细节。因此，它是计算机通信体系结构中关键的一层。主要关注tcp、udp。ipv6传输效率高就和这层有关。
        在这一层，数据的单位称为数据段（segment）
            主要功能
            ①：为端到端连接提供传输服务
            ②：这种传输服务分为可靠和不可靠的,其中Tcp是典型的可靠传输,而Udp则是不可靠传输
            ③：为端到端连接提供流量控制,差错控制,服务质量(Quality of Service,QoS)等管理服务
            包括的协议如下

            TCP(Transmission Control Protocol)：传输控制协议，传输效率低，可靠性强
            UDP(User Datagram Protocol)：用户数据报协议，适用于传输可靠性要求不高，数据量小的数据（比如QQ）

    5.会话层(会话控制)
        负责维护两个结点之间的传输连接，以便确保点到点传输不中断，以及管理数据交换等功能。管理不同设备之间通信。

    6.表现层（数据格式转化）
        对应用层数据编码和数据格式转换，保障不同设备之间通信（windows和linux）。主要功能是：用于处理在两个通信系统中交换信息的表示方法，主要包括数据格式变换、数据加密与解密、数据压缩与恢复等功能。

    7.应用层
        提供应用接口，为用户直接提供各种网络服务，比如文件服务器、数据库服务、电子邮件与其他网络软件服务
    看完以上的解释，瞬间再次㝬然开朗。

二、什么是五层协议
    1. 应用层
    2. 传输层
    3. 网络层
    4. 数据链路层
    5. 物理层

三、什么是四层协议
    第一层叫“链接层”（link layer），负责在以太网、WiFi 这样的底层网络上发送原始数据包，工作在网卡这个层次，使用 MAC 地址来标记网络上的设备，所以有时候也叫 MAC 层。

    第二层叫“网际层”或者“网络互连层”（internet layer），IP 协议就处在这一层。因为 IP 协议定义了“IP 地址”的概念，所以就可以在“链接层”的基础上，用 IP 地址取代 MAC 地址，把许许多多的局域网、广域网连接成一个虚拟的巨大网络，在这个网络里找设备时只要把 IP 地址再“翻译”成 MAC 地址就可以了。

    第三层叫“传输层”（transport layer），这个层次协议的职责是保证数据在 IP 地址标记的两点之间“可靠”地传输，是 TCP 协议工作的层次，另外还有它的一个“小伙伴”UDP。
    TCP 是一个有状态的协议，需要先与对方建立连接然后才能发送数据，而且保证数据不丢失不重复。而 UDP 则比较简单，它无状态，不用事先建立连接就可以任意发送数据，但不保证数据一定会发到对方。两个协议的另一个重要区别在于数据的形式。TCP 的数据是连续的“字节流”，有先后顺序，而 UDP 则是分散的小数据包，是顺序发，乱序收。

    第四层叫“应用层”（application layer），由于下面的三层把基础打得非常好，所以在这一层就“百花齐放”了，有各种面向具体应用的协议。例如 Telnet、SSH、FTP、SMTP 等等，当然还有我们的 HTTP。
