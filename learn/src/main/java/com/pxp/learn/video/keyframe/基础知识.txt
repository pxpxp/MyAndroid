1.声音的表示
    声音的数字化过程是将模拟信号（连续时间信号）转化为数字信号（离散时间信号）的过程，包括 3 个步骤：
        采样：以一定采样率在时域内获取离散信号。
        量化：每个采样点幅度的数字化表示。
        编码：以一定格式存储数据。
    经过数字化处理后的数字音频包含如下三要素：
        采样率：采样频率应该不小于模拟信号频谱中最高频率的 2 倍。一般实际应用中保证采样频率为信号最高频率的 2.56～4 倍。
        量化位深：位深体现的是能表示的值的范围，比如 16 bit 能表示的最大值是 216 - 1 = 65535，那么取其最大值就能计算它能表示的最大声压级：最大声压级 = 20 × lg(65535) = 96.33。
                所以 16 bit 的位深可以最大表示 96 分贝。
        声道数：声道是指声音在录制或播放时在不同空间位置采集或回放的相互独立的音频信号，所以声道数也就是声音录制时的音源数量或回放时相应的扬声器数量。
                单声道（Mono）：是以单个声道来重现声音。它只用了一个麦克风，一个扬声器或是耳机、并联扬声器，并从同样的信号路径送入信号，在并联扬声器中，虽有多个扬声器，但每个扬声器送入的仍是同一信号。
                立体声（Stereo）：是使用两个或多个独立的音效通道，在一对以对称方式配置的扬声器上出现。以此方法所发出的声音，在不同方向仍可保持自然与悦耳。
                5.1 声道：包含一个正面声道、左前方声道、右前方声道、左环绕声道、右环绕声道，以及一个用来重放 120 Hz 以下超低频的声道。最早应用于早期的电影院，如杜比 AC-3。
                7.1 声道：在 5.1 声道的基础上，把左右的环绕声道拆分为左右环绕声道以及左右后置声道。主要应用于蓝光以及现代的电影院。
    数字音频数据是什么？
        我们在手机、电脑上处理的声音数据，就是声音经过数字化后的数据，也就是数字音频数据，其中最常见的格式是 PCM（Pulse Code Modulation），即脉冲编码调制格式。
        在计算机应用中，PCM 是能达到音频最高保真水平的格式，它被广泛用于素材保存及音乐欣赏，PCM 也因此被称为无损编码格式。但这并不意味着 PCM 就能够确保信号绝对保真，它只能做到最大程度的无限接近原始声音。
        要计算一个 PCM 音频流的码率需要数字音频的三要素信息即可：码率 = 采样率 × 量化位深 × 声道数。
        在处理 PCM 数据时，对于音频不同声道的数据，有两种不同的存储格式：
            交错格式：不同声道的数据交错排列。
            平坦格式：相同声道的数据聚集排列。

2.图像的表示
    图像进行数字化
        其实图像的数字化跟声音的数字化也类似，最终都是要把模拟信号转换为数字信号，这种转换包括两种处理过程：采样和量化。
    数字图像数据是什么
        我们在手机、电脑上处理的图像数据，也就是经过数字化处理后的数字图像数据。
        在音视频开发中，处理最多的图像数据其实是 RGB、YCbCr 数据，在前面的文章里我们已经详细介绍过这两种颜色模型。
        RGB 数据主要是用于屏幕显示，YCbCr 数据则由于较好的压缩性，则主要用于图像数据处理、编码、传输。它们之间的转换，
        则需要根据具体使用的颜色模型标准、采样格式及存储格式来借助前文介绍过的转换矩阵来实现。这里就不再重复叙述了。
        提到数字图像数据的格式，我们还经常听到的是 PNG、JPEG、GIF 等名词，这些是图像的文件存储格式，它们是对数字图像数据进行编码后进行存储。
        如果要展示，则需要读取文件数据，进行解码再展示。

3.音频编码
    对音频或视频进行编码最重要目的就是为了进行数据压缩，以此来降低数据传输和存储的成本。
        拿音频来举例，一路采样率为 44100 Hz，量化位深为 16 bit，声道数为 2 的声音，如果不进行编码压缩，对应的码率是：44100 Hz * 16 bit * 2 = 1411200 bps = 1.346 Mbps。
        一分钟的时间所需要的数据量是：1.346 Mbps * 60 s = 80.75 Mb = 10.09 MB。
    要对音频数据进行编码压缩，主要是寻找音频数据中的冗余信息对其进行压缩：1）时域冗余   2）频域冗余  3）听觉冗余
    对音频进行编码常见的格式有：
        PCM，无压缩。一种将模拟信号的数字化方法，无损编码。
        WAV，无压缩。有多种实现方式，但是都不会进行压缩操作。其中一种实现就是在 PCM 数据格式的前面加上 44 字节，分别用来描述 PCM 的采样率、声道数、数据格式等信息。音质非常好，大量软件都支持。
        MP3，有损压缩。音质在 128 Kbps 以上表现还不错，压缩比比较高，大量软件和硬件都支持，兼容性好。
        AAC，有损压缩。在小于 128 Kbps 的码率下表现优异，并且多用于视频中的音频编码。
        OPUS，有损压缩。可以用比 MP3 更小的码率实现比 MP3 更好的音质，高中低码率下均有良好的表现，兼容性不够好，流媒体特性不支持。适用于语音聊天的音频消息场景。
    PCM 是音频原始数据的基础格式；AAC 则在短视频和直播场景广泛使用。这里，我们只详细介绍一下 PCM 和 AAC。
        1、PCM 编码
            PCM 是指脉冲编码调制（Pulse Code Modulation），是数字通信的编码方式之一，是一种将模拟信号数字化的方法。
            主要过程是将话音等模拟信号每隔一定时间进行取样，使其离散化，同时将抽样值按分层单位四舍五入取整量化，同时将抽样值按一组二进制码来表示抽样脉冲的幅值。
            从声音的模拟信号得到 PCM 编码数据的过程包括 3 个步骤：
                采样：以一定采样率在时域内获取离散信号。
                量化：每个采样点幅度的数字化表示。
                编码：以一定格式存储数据。
            由于 PCM 编码是无损编码，且广泛应用，所以我们通常可以认为音频的裸数据格式就是 PCM 的。但为了节省存储空间以及传输成本，
            通常我们会对音频 PCM 数据进行压缩，这也就是音频编码，比如 MP3、AAC、OPUS 都是我们常见的音频编码格式。
        2、AAC 编码    Advanced Audio Coding
            AAC 作为 MP3 的后继者而被设计出来，综合了许多新的技术，有很多新的特性，它支持从 8k 到 96k 的各种采样率，支持多种声道配置方案。
            在相同的比特率之下，AAC 相较于 MP3 通常可以达到更好的声音质量。

4.视频编码
    跟音频编码一样，视频编码最重要的目的也是为了进行数据压缩，以此来降低数据传输和存储成本。
        以一路分辨率 720x1280（常说的 720P），帧率为 30 fps 的视频为例，如果不经过编码压缩，直接传输或存储原始的 RGB 数据，对应的码率是：720 * 1280 * 3 * 8 * 30 = 632.8125 Mbps (宽 * 高 * 像素字节数 * 字节比特数 * 帧数)。
        一分钟的时间所需要的数据量是：632.8125 Mbps * 60s = 4.63 GB。
    通常，对信息进行压缩，可以从这几个方面着手：
        1）信源包含的符号出现概率的非均匀性，使得信源是可以被压缩的。熵编码就利用信源的统计特性进行码率压缩的编码方式。比如著名的哈夫曼编码（也是熵编码的一种），就是当信源中各符号的出现概率都一样时编码效率最低。
        2）信源的相关性，使得信源是可以被压缩的。比如信息 A 和信息 B 的相关性，使得我们可以由信息 A 加残差 D（D = A - B） 来推导信息 B，这样只编码 A 和 D 来实现压缩，这就是所谓的差分编码技术。
        3）人的感知对不同信源的敏感度不一样，使得信源是可以被压缩的。对人感知不敏感的信息进行部分或全部忽略来实现压缩。
    要对视频进行编码，则主要是研究视频数据中的冗余信息，并对其进行压缩。视频信息主要包括这几个方面的冗余：
        空间冗余：在同一张帧之中，相邻的像素之间通常有很强的关连性，这样的关连性即为空间上的冗余信息。
        时间冗余：在视频信息中，相邻的帧与帧之间通常有很强的关连性，这样的关连性即为时间上的冗余信息。
        编码冗余：视频中不同数据出现的概率不同，欲编码的符号的几率分布是不均匀的。
        视觉冗余：人的视觉系统对某些细节不敏感。视觉上的冗余信息是指在人在观看视频时，人眼无法察觉的信息。
    软件和硬件编解码
        编解码分为软编软解和硬编硬解：
            软编/软解: CPU 处理。
            硬编/硬解: 使用显卡 GPU、专用 SDP 等其它芯片硬件处理。

    序列：
        什么叫序列呢？上述的这段时间内图像变化不大的图像集就可以称之为一个序列。序列可以理解为有相同特点的一段图像数据。
        但是如果某个图像与之前的图像变换很大，很难参考之前的帧来生成新的帧，那么就结束上一个序列，开始下一个序列。重复上述做法，生成新的一段序列。
    帧类型
        H.264 结构中，一幅视频图像编码后的数据叫做一帧，一帧由一个片（slice）或多个片组成，一个片由一个或多个宏块（MB）组成，一个宏块由 16x16 的 YUV 数据组成。
        宏块是 H.264 编码的基本单位。在 H.264 协议内定义了三种帧，分别是 I 帧、B 帧与 P 帧。

        1）I 帧
            I 帧，即帧内编码图像帧，不参考其他图像帧，只利用本帧的信息进行编码。
            I 帧的特点：
                它是一个全帧压缩编码帧，将全帧图像信息进行压缩编码及传输；
                解码时仅用 I 帧的数据就可重构完整图像；
                I 帧描述了图像背景和运动主体的详情；
                I 帧不需要参考其他画面而生成；
                I 帧是 P 帧和 B 帧的参考帧，其质量直接影响到同组中以后各帧的质量；
                一般地，I 帧是图像组 GOP 的基础帧（第一帧），在一组中只有一个 I 帧；
                I 帧所占数据的信息量比较大。
            I 帧编码流程：
                进行帧内预测，决定所采用的帧内预测模式；
                当前像素值减去预测值，得到残差；
                对残差进行变换和量化；
                变长编码和算术编码；
                重构图像并滤波，得到的图像作为其它帧的参考帧。

        2）P 帧
            P 帧，即预测编码图像帧，利用之前的 I 帧或 P 帧，采用运动预测的方式进行帧间预测编码。
            P 帧的预测与重构：P 帧是以 I 帧为参考帧，在 I 帧中找出 P 帧『某点』的预测值和运动矢量，取预测差值和运动矢量一起传送。在接收端根据运动矢量从 I 帧中找出 P 帧『某点』的预测值并与差值相加以得到 P 帧『某点』样值，从而可得到完整的 P 帧。
            P 帧特点：
                P 帧是 I 帧后面相隔 1-2 帧的编码帧；
                P 帧采用运动补偿的方法传送它与前面的 I 或 P 帧的差值及运动矢量（预测误差）；
                P 帧属于前向预测的帧间编码，它只参考前面最靠近它的 I 帧或 P 帧；
                P 帧可以是其后面 P 帧的参考帧，也可以是其前后的 B 帧的参考帧；
                由于 P 帧是参考帧，它可能造成解码错误的扩散；
                由于是差值传送，P 帧的压缩比较高。
            P 帧编码的基本流程：
                进行运动估计，计算采用帧间编码模式的率失真函数值。P 帧只参考前面的帧；
                进行帧内预测，选取率失真函数值最小的帧内模式与帧间模式比较，确定采用哪种编码模式；
                计算实际值和预测值的差值；
                对残差进行变换和量化；
                若编码，如果是帧间编码模式，编码运动矢量。

        3）B 帧
            B 帧，即双向预测编码图像帧，提供最高的压缩比，它既需要之前的图像帧（I 帧或 P 帧），也需要后来的图像帧（P 帧），采用运动预测的方式进行帧间双向预测编码。
            B 帧的预测与重构：B 帧以前面的 I 或 P 帧和后面的 P 帧为参考帧，找出 B 帧『某点』的预测值和两个运动矢量，并取预测差值和运动矢量传送。接收端根据运动矢量在两个参考帧中找出预测值并与差值求和，得到 B 帧『某点』样值，从而可得到完整的 B 帧。
            B 帧特点：
                B 帧是由前面的 I 或 P 帧和后面的 P 帧来进行预测的；
                B 帧传送的是它与前面的 I 或 P 帧和后面的 P 帧之间的预测误差及运动矢量；
                B 帧是双向预测编码帧；
                B 帧压缩比最高，因为它只反映两参考帧间运动主体的变化情况，预测比较准确；
                B 帧不是参考帧，不会造成解码错误的扩散。
            B 帧编码的基本流程：
                进行运动估计，计算采用帧间编码模式的率失真函数值。B 帧可参考后面的帧；
                进行帧内预测，选取率失真函数值最小的帧内模式与帧间模式比较，确定采用哪种编码模式；
                计算实际值和预测值的差值；
                对残差进行变换和量化；
                若编码，如果是帧间编码模式，编码运动矢量。

    DTS 和 PTS
        DTS、PTS 的概念如下所述：
        DTS（Decoding Time Stamp）：即解码时间戳，这个时间戳的意义在于告诉播放器该在什么时候解码这一帧的数据。
        PTS（Presentation Time Stamp）：即显示时间戳，这个时间戳用来告诉播放器该在什么时候显示这一帧的数据。
        需要注意的是：虽然 DTS、PTS 是用于指导播放端的行为，但它们是在编码的时候由编码器生成的。
        当视频流中没有 B 帧时，通常 DTS 和 PTS 的顺序是一致的。但如果有 B 帧时，就回到了我们前面说的问题：解码顺序和播放顺序不一致了。

    GOP
        GOP（Group Of Pictures）是图像组的概念，它指的是视频编码序列中两个 I 帧之间的距离。
        通常意义上的 GOP 由 I 帧开始，到下一个 I 帧之前的帧结束。严格意义上讲，这个 I 帧是一个 IDR 帧。

    IDR 帧
        IDR 帧全称叫做 Instantaneous Decoder Refresh，是 I 帧的一种。IDR 帧的作用是立刻刷新，重新算一个新的序列开始编码，使错误不致传播。
        I 帧有被跨帧参考的可能，但 IDR 帧不会。

    压缩方式
        H.264 采用的核心算法是『帧内压缩』和『帧间压缩』，帧内压缩是生成 I 帧的算法，帧间压缩是生成 B 帧和 P 帧的算法。
        帧内压缩也称为空间压缩。
            当压缩一帧图像时，仅考虑本帧的数据而不考虑相邻帧之间的冗余信息，这实际上与静态图像压缩类似。帧内一般采用有损压缩算法，
            由于帧内压缩是编码一个完整的图像，所以可以独立的解码、显示。帧内压缩一般达不到很高的压缩率，跟编码 JPEG 差不多。
        帧间压缩的原理是：
            相邻几帧的数据有很大的相关性，或者说前后两帧信息变化很小的特点。也即连续的视频其相邻帧之间具有冗余信息，根据这一特性，
            压缩相邻帧之间的冗余量就可以进一步提高压缩量，减小压缩比。帧间压缩也称为时间压缩，它通过比较时间轴上不同帧之间的数据进行压缩。
            帧间压缩一般是无损的。帧差值算法是一种典型的时间压缩法，它通过比较本帧与相邻帧之间的差异，仅记录本帧与其相邻帧的差值，这样可以大大减少数据量。
        编码压缩的步骤大致如下：
            分组，也就是将一系列变换不大的图像归为一个组，也就是一个序列，也就是 GOP；
            定义帧，将每组的图像帧归分为 I 帧、P 帧和 B 帧三种类型；
            预测帧，以 I 帧做为基础帧，以 I 帧预测 P 帧，再由 I 帧和 P 帧预测 B 帧；
            数据传输，最后将 I 帧数据与预测的差值信息进行存储和传输。

    分层结构
        H.264 的主要目标是为了有高的视频压缩比和良好的网络亲和性，为了达成这两个目标，H.264 的解决方案是将系统框架分为两个层面：『视频编码层面（VCL）』和『网络抽象层面（NAL）』。
        视频编码层（VCL）：是对视频编码核心算法过程、子宏块、宏块、片等概念的定义。这层主要是为了尽可能的独立于网络来高效的对视频内容进行编码。
                        编码完成后，输出的数据是 SODB（String Of Data Bits）。
        网络适配层（NAL）：是对图像序列、图像等片级别以上的概念的定义。这层负责将 VCL 产生的比特字符串适配到各种各样的网络和多元环境中。
                        该层将 VCL 层输出的 SODB 数据打包成 RBSP（Raw Byte Sequence Payload）。
                        SODB 是编码后的原始数据，RBSP 是在原始编码数据后面添加了结尾比特，一个比特 1 和若干个比特 0，用于字节对齐。
                        然后再在 RBSP 头部加上 NAL Header 来组成一个一个的 NAL 单元。

H.265,H.266 略...

MP4格式
    最少加载多少数据就能渲染出视频首帧？优化短视频播放体验必须先了解它丨音视频基础








